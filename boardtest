package com.qait.automation.snl;

import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.UnsupportedEncodingException;

import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;

public class BoardTest {
	Board test;
	BoardObject object;
	
	@BeforeMethod
	public void gettingUUID() throws IOException {
		object=new BoardObject();
	}
	
	@Test(expectedExceptions=MaxPlayersReachedExeption.class)
	public void MaxPlayersReachedExeptionCheck() throws 
	FileNotFoundException, UnsupportedEncodingException, PlayerExistsException,
	GameInProgressException, MaxPlayersReachedExeption, IOException{
		object.moreThanFourPlayers("Gaurav","aditya","karan","rahul","himanashu");
	}
	
	@Test(expectedExceptions=PlayerExistsException.class)
	public void PlayerExistsExceptionCheck() throws
	PlayerExistsException, FileNotFoundException, UnsupportedEncodingException,
	GameInProgressException, MaxPlayersReachedExeption, IOException {
		object.PlayerExists("gaurav","aditya","karan","gaurav");
	}
	
	@Test(expectedExceptions=GameInProgressException.class)
	public void GameInProgressExceptionCheck() throws FileNotFoundException, UnsupportedEncodingException,
	IOException, PlayerExistsException, GameInProgressException, MaxPlayersReachedExeption, InvalidTurnException {
		object.GameInprogress("gaurav","aditya","INVALID PLAYER");
	}
	@Test
	public void deletePlayerIfPlayerPresentCheck() throws FileNotFoundException, UnsupportedEncodingException, PlayerExistsException, GameInProgressException, MaxPlayersReachedExeption, IOException, NoUserWithSuchUUIDException, InvalidTurnException {
		object.deletePlayerIfPresent("Gaurav", "Aditya","Gaurav");
	}
	@Test(expectedExceptions=NoUserWithSuchUUIDException.class)
	public void deletePlayerIfNotPlayerNotPresentCheck() throws FileNotFoundException, UnsupportedEncodingException, NoUserWithSuchUUIDException {
		object.deletePlayerIfNotPresent();
	}
}
